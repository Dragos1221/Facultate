// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: my.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Protocol
{

    /// <summary>Holder for reflection information generated from my.proto</summary>
    public static partial class MyReflection
    {

        #region Descriptor
        /// <summary>File descriptor for my.proto</summary>
        public static pbr::FileDescriptor Descriptor
        {
            get { return descriptor; }
        }
        private static pbr::FileDescriptor descriptor;

        static MyReflection()
        {
            byte[] descriptorData = global::System.Convert.FromBase64String(
                string.Concat(
                  "CghteS5wcm90byIrCgRVc2VyEhAKCHVzZXJuYW1lGAEgASgJEhEKCXBhc3N3",
                  "ZG9yZBgCIAEoCSJGCglSZXplcnZhcmUSFAoMaWREZXN0aW5hdGllGAEgASgF",
                  "EhUKDWxvY3VyaU9jdXBhdGUYAiABKAUSDAoEbnVtZRgDIAEoCSKhAQoKRGVz",
                  "dGluYXRpZRIKCgJpZBgBIAEoBRIVCg1sb2N1cmlPY3VwYXRlGAIgASgFEhkK",
                  "EWxvY3VyaURpc3BvbmliaWxlGAMgASgFEhIKCmRlc3RpbmF0aWUYBCABKAkS",
                  "CgoCYW4YBSABKAUSDAoEbHVuYRgGIAEoBRIKCgJ6aRgHIAEoBRILCgNvcmEY",
                  "CCABKAUSDgoGbWludXRlGAkgASgFIs8BCgdSZXF1ZXN0EgwKBG1lc3MYASAB",
                  "KAkSEwoEdXNlchgCIAEoCzIFLlVzZXISCgoCaWQYAyABKAUSHQoJcmV6ZXJ2",
                  "YXJlGAQgASgLMgouUmV6ZXJ2YXJlEgoKAmFuGAUgASgFEgwKBGx1bmEYBiAB",
                  "KAUSCgoCemkYByABKAUSCwoDb3JhGAggASgFEg4KBm1pbnV0ZRgJIAEoBRIV",
                  "Cg1kZXN0aW5hdGllU3RyGAogASgJEhwKB2Rlc3RPYmoYCyABKAsyCy5EZXN0",
                  "aW5hdGllIpwBCghSZXNwb25zZRIMCgRtZXNzGAEgASgJEg0KBXJCb29sGAIg",
                  "ASgIEh0KCXJlemVydmFyZRgDIAEoCzIKLlJlemVydmFyZRIiCg5saXN0YVJl",
                  "emVydmFyaRgEIAMoCzIKLlJlemVydmFyZRIKCgJpZBgFIAEoBRIkCg9saXN0",
                  "YURlc3RpbmF0aWkYBiADKAsyCy5EZXN0aW5hdGllQguqAghQcm90b2NvbGIG",
                  "cHJvdG8z"));
            descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
                new pbr::FileDescriptor[] { },
                new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.User), global::Protocol.User.Parser, new[]{ "Username", "Passwdord" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.Rezervare), global::Protocol.Rezervare.Parser, new[]{ "IdDestinatie", "LocuriOcupate", "Nume" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.Destinatie), global::Protocol.Destinatie.Parser, new[]{ "Id", "LocuriOcupate", "LocuriDisponibile", "Destinatie_", "An", "Luna", "Zi", "Ora", "Minute" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.Request), global::Protocol.Request.Parser, new[]{ "Mess", "User", "Id", "Rezervare", "An", "Luna", "Zi", "Ora", "Minute", "DestinatieStr", "DestObj" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Protocol.Response), global::Protocol.Response.Parser, new[]{ "Mess", "RBool", "Rezervare", "ListaRezervari", "Id", "ListaDestinatii" }, null, null, null)
                }));
        }
        #endregion

    }
    #region Messages
    public sealed partial class User : pb::IMessage<User>
    {
        private static readonly pb::MessageParser<User> _parser = new pb::MessageParser<User>(() => new User());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<User> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Protocol.MyReflection.Descriptor.MessageTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public User()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public User(User other) : this()
        {
            username_ = other.username_;
            passwdord_ = other.passwdord_;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public User Clone()
        {
            return new User(this);
        }

        /// <summary>Field number for the "username" field.</summary>
        public const int UsernameFieldNumber = 1;
        private string username_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Username
        {
            get { return username_; }
            set
            {
                username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "passwdord" field.</summary>
        public const int PasswdordFieldNumber = 2;
        private string passwdord_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Passwdord
        {
            get { return passwdord_; }
            set
            {
                passwdord_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as User);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(User other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (Username != other.Username) return false;
            if (Passwdord != other.Passwdord) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (Username.Length != 0) hash ^= Username.GetHashCode();
            if (Passwdord.Length != 0) hash ^= Passwdord.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
            if (Username.Length != 0)
            {
                output.WriteRawTag(10);
                output.WriteString(Username);
            }
            if (Passwdord.Length != 0)
            {
                output.WriteRawTag(18);
                output.WriteString(Passwdord);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(output);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (Username.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
            }
            if (Passwdord.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Passwdord);
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(User other)
        {
            if (other == null)
            {
                return;
            }
            if (other.Username.Length != 0)
            {
                Username = other.Username;
            }
            if (other.Passwdord.Length != 0)
            {
                Passwdord = other.Passwdord;
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                    case 10:
                        {
                            Username = input.ReadString();
                            break;
                        }
                    case 18:
                        {
                            Passwdord = input.ReadString();
                            break;
                        }
                }
            }
        }

    }

    public sealed partial class Rezervare : pb::IMessage<Rezervare>
    {
        private static readonly pb::MessageParser<Rezervare> _parser = new pb::MessageParser<Rezervare>(() => new Rezervare());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Rezervare> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Protocol.MyReflection.Descriptor.MessageTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Rezervare()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Rezervare(Rezervare other) : this()
        {
            idDestinatie_ = other.idDestinatie_;
            locuriOcupate_ = other.locuriOcupate_;
            nume_ = other.nume_;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Rezervare Clone()
        {
            return new Rezervare(this);
        }

        /// <summary>Field number for the "idDestinatie" field.</summary>
        public const int IdDestinatieFieldNumber = 1;
        private int idDestinatie_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int IdDestinatie
        {
            get { return idDestinatie_; }
            set
            {
                idDestinatie_ = value;
            }
        }

        /// <summary>Field number for the "locuriOcupate" field.</summary>
        public const int LocuriOcupateFieldNumber = 2;
        private int locuriOcupate_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int LocuriOcupate
        {
            get { return locuriOcupate_; }
            set
            {
                locuriOcupate_ = value;
            }
        }

        /// <summary>Field number for the "nume" field.</summary>
        public const int NumeFieldNumber = 3;
        private string nume_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Nume
        {
            get { return nume_; }
            set
            {
                nume_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as Rezervare);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Rezervare other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (IdDestinatie != other.IdDestinatie) return false;
            if (LocuriOcupate != other.LocuriOcupate) return false;
            if (Nume != other.Nume) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (IdDestinatie != 0) hash ^= IdDestinatie.GetHashCode();
            if (LocuriOcupate != 0) hash ^= LocuriOcupate.GetHashCode();
            if (Nume.Length != 0) hash ^= Nume.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
            if (IdDestinatie != 0)
            {
                output.WriteRawTag(8);
                output.WriteInt32(IdDestinatie);
            }
            if (LocuriOcupate != 0)
            {
                output.WriteRawTag(16);
                output.WriteInt32(LocuriOcupate);
            }
            if (Nume.Length != 0)
            {
                output.WriteRawTag(26);
                output.WriteString(Nume);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(output);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (IdDestinatie != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(IdDestinatie);
            }
            if (LocuriOcupate != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(LocuriOcupate);
            }
            if (Nume.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Nume);
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Rezervare other)
        {
            if (other == null)
            {
                return;
            }
            if (other.IdDestinatie != 0)
            {
                IdDestinatie = other.IdDestinatie;
            }
            if (other.LocuriOcupate != 0)
            {
                LocuriOcupate = other.LocuriOcupate;
            }
            if (other.Nume.Length != 0)
            {
                Nume = other.Nume;
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                    case 8:
                        {
                            IdDestinatie = input.ReadInt32();
                            break;
                        }
                    case 16:
                        {
                            LocuriOcupate = input.ReadInt32();
                            break;
                        }
                    case 26:
                        {
                            Nume = input.ReadString();
                            break;
                        }
                }
            }
        }

    }

    public sealed partial class Destinatie : pb::IMessage<Destinatie>
    {
        private static readonly pb::MessageParser<Destinatie> _parser = new pb::MessageParser<Destinatie>(() => new Destinatie());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Destinatie> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Protocol.MyReflection.Descriptor.MessageTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Destinatie()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Destinatie(Destinatie other) : this()
        {
            id_ = other.id_;
            locuriOcupate_ = other.locuriOcupate_;
            locuriDisponibile_ = other.locuriDisponibile_;
            destinatie_ = other.destinatie_;
            an_ = other.an_;
            luna_ = other.luna_;
            zi_ = other.zi_;
            ora_ = other.ora_;
            minute_ = other.minute_;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Destinatie Clone()
        {
            return new Destinatie(this);
        }

        /// <summary>Field number for the "id" field.</summary>
        public const int IdFieldNumber = 1;
        private int id_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Id
        {
            get { return id_; }
            set
            {
                id_ = value;
            }
        }

        /// <summary>Field number for the "locuriOcupate" field.</summary>
        public const int LocuriOcupateFieldNumber = 2;
        private int locuriOcupate_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int LocuriOcupate
        {
            get { return locuriOcupate_; }
            set
            {
                locuriOcupate_ = value;
            }
        }

        /// <summary>Field number for the "locuriDisponibile" field.</summary>
        public const int LocuriDisponibileFieldNumber = 3;
        private int locuriDisponibile_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int LocuriDisponibile
        {
            get { return locuriDisponibile_; }
            set
            {
                locuriDisponibile_ = value;
            }
        }

        /// <summary>Field number for the "destinatie" field.</summary>
        public const int Destinatie_FieldNumber = 4;
        private string destinatie_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Destinatie_
        {
            get { return destinatie_; }
            set
            {
                destinatie_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "an" field.</summary>
        public const int AnFieldNumber = 5;
        private int an_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int An
        {
            get { return an_; }
            set
            {
                an_ = value;
            }
        }

        /// <summary>Field number for the "luna" field.</summary>
        public const int LunaFieldNumber = 6;
        private int luna_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Luna
        {
            get { return luna_; }
            set
            {
                luna_ = value;
            }
        }

        /// <summary>Field number for the "zi" field.</summary>
        public const int ZiFieldNumber = 7;
        private int zi_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Zi
        {
            get { return zi_; }
            set
            {
                zi_ = value;
            }
        }

        /// <summary>Field number for the "ora" field.</summary>
        public const int OraFieldNumber = 8;
        private int ora_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Ora
        {
            get { return ora_; }
            set
            {
                ora_ = value;
            }
        }

        /// <summary>Field number for the "minute" field.</summary>
        public const int MinuteFieldNumber = 9;
        private int minute_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Minute
        {
            get { return minute_; }
            set
            {
                minute_ = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as Destinatie);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Destinatie other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (Id != other.Id) return false;
            if (LocuriOcupate != other.LocuriOcupate) return false;
            if (LocuriDisponibile != other.LocuriDisponibile) return false;
            if (Destinatie_ != other.Destinatie_) return false;
            if (An != other.An) return false;
            if (Luna != other.Luna) return false;
            if (Zi != other.Zi) return false;
            if (Ora != other.Ora) return false;
            if (Minute != other.Minute) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (Id != 0) hash ^= Id.GetHashCode();
            if (LocuriOcupate != 0) hash ^= LocuriOcupate.GetHashCode();
            if (LocuriDisponibile != 0) hash ^= LocuriDisponibile.GetHashCode();
            if (Destinatie_.Length != 0) hash ^= Destinatie_.GetHashCode();
            if (An != 0) hash ^= An.GetHashCode();
            if (Luna != 0) hash ^= Luna.GetHashCode();
            if (Zi != 0) hash ^= Zi.GetHashCode();
            if (Ora != 0) hash ^= Ora.GetHashCode();
            if (Minute != 0) hash ^= Minute.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
            if (Id != 0)
            {
                output.WriteRawTag(8);
                output.WriteInt32(Id);
            }
            if (LocuriOcupate != 0)
            {
                output.WriteRawTag(16);
                output.WriteInt32(LocuriOcupate);
            }
            if (LocuriDisponibile != 0)
            {
                output.WriteRawTag(24);
                output.WriteInt32(LocuriDisponibile);
            }
            if (Destinatie_.Length != 0)
            {
                output.WriteRawTag(34);
                output.WriteString(Destinatie_);
            }
            if (An != 0)
            {
                output.WriteRawTag(40);
                output.WriteInt32(An);
            }
            if (Luna != 0)
            {
                output.WriteRawTag(48);
                output.WriteInt32(Luna);
            }
            if (Zi != 0)
            {
                output.WriteRawTag(56);
                output.WriteInt32(Zi);
            }
            if (Ora != 0)
            {
                output.WriteRawTag(64);
                output.WriteInt32(Ora);
            }
            if (Minute != 0)
            {
                output.WriteRawTag(72);
                output.WriteInt32(Minute);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(output);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (Id != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
            }
            if (LocuriOcupate != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(LocuriOcupate);
            }
            if (LocuriDisponibile != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(LocuriDisponibile);
            }
            if (Destinatie_.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Destinatie_);
            }
            if (An != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(An);
            }
            if (Luna != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(Luna);
            }
            if (Zi != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(Zi);
            }
            if (Ora != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(Ora);
            }
            if (Minute != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(Minute);
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Destinatie other)
        {
            if (other == null)
            {
                return;
            }
            if (other.Id != 0)
            {
                Id = other.Id;
            }
            if (other.LocuriOcupate != 0)
            {
                LocuriOcupate = other.LocuriOcupate;
            }
            if (other.LocuriDisponibile != 0)
            {
                LocuriDisponibile = other.LocuriDisponibile;
            }
            if (other.Destinatie_.Length != 0)
            {
                Destinatie_ = other.Destinatie_;
            }
            if (other.An != 0)
            {
                An = other.An;
            }
            if (other.Luna != 0)
            {
                Luna = other.Luna;
            }
            if (other.Zi != 0)
            {
                Zi = other.Zi;
            }
            if (other.Ora != 0)
            {
                Ora = other.Ora;
            }
            if (other.Minute != 0)
            {
                Minute = other.Minute;
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                    case 8:
                        {
                            Id = input.ReadInt32();
                            break;
                        }
                    case 16:
                        {
                            LocuriOcupate = input.ReadInt32();
                            break;
                        }
                    case 24:
                        {
                            LocuriDisponibile = input.ReadInt32();
                            break;
                        }
                    case 34:
                        {
                            Destinatie_ = input.ReadString();
                            break;
                        }
                    case 40:
                        {
                            An = input.ReadInt32();
                            break;
                        }
                    case 48:
                        {
                            Luna = input.ReadInt32();
                            break;
                        }
                    case 56:
                        {
                            Zi = input.ReadInt32();
                            break;
                        }
                    case 64:
                        {
                            Ora = input.ReadInt32();
                            break;
                        }
                    case 72:
                        {
                            Minute = input.ReadInt32();
                            break;
                        }
                }
            }
        }

    }

    public sealed partial class Request : pb::IMessage<Request>
    {
        private static readonly pb::MessageParser<Request> _parser = new pb::MessageParser<Request>(() => new Request());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Request> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Protocol.MyReflection.Descriptor.MessageTypes[3]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request(Request other) : this()
        {
            mess_ = other.mess_;
            user_ = other.user_ != null ? other.user_.Clone() : null;
            id_ = other.id_;
            rezervare_ = other.rezervare_ != null ? other.rezervare_.Clone() : null;
            an_ = other.an_;
            luna_ = other.luna_;
            zi_ = other.zi_;
            ora_ = other.ora_;
            minute_ = other.minute_;
            destinatieStr_ = other.destinatieStr_;
            destObj_ = other.destObj_ != null ? other.destObj_.Clone() : null;
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request Clone()
        {
            return new Request(this);
        }

        /// <summary>Field number for the "mess" field.</summary>
        public const int MessFieldNumber = 1;
        private string mess_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Mess
        {
            get { return mess_; }
            set
            {
                mess_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "user" field.</summary>
        public const int UserFieldNumber = 2;
        private global::Protocol.User user_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Protocol.User User
        {
            get { return user_; }
            set
            {
                user_ = value;
            }
        }

        /// <summary>Field number for the "id" field.</summary>
        public const int IdFieldNumber = 3;
        private int id_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Id
        {
            get { return id_; }
            set
            {
                id_ = value;
            }
        }

        /// <summary>Field number for the "rezervare" field.</summary>
        public const int RezervareFieldNumber = 4;
        private global::Protocol.Rezervare rezervare_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Protocol.Rezervare Rezervare
        {
            get { return rezervare_; }
            set
            {
                rezervare_ = value;
            }
        }

        /// <summary>Field number for the "an" field.</summary>
        public const int AnFieldNumber = 5;
        private int an_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int An
        {
            get { return an_; }
            set
            {
                an_ = value;
            }
        }

        /// <summary>Field number for the "luna" field.</summary>
        public const int LunaFieldNumber = 6;
        private int luna_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Luna
        {
            get { return luna_; }
            set
            {
                luna_ = value;
            }
        }

        /// <summary>Field number for the "zi" field.</summary>
        public const int ZiFieldNumber = 7;
        private int zi_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Zi
        {
            get { return zi_; }
            set
            {
                zi_ = value;
            }
        }

        /// <summary>Field number for the "ora" field.</summary>
        public const int OraFieldNumber = 8;
        private int ora_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Ora
        {
            get { return ora_; }
            set
            {
                ora_ = value;
            }
        }

        /// <summary>Field number for the "minute" field.</summary>
        public const int MinuteFieldNumber = 9;
        private int minute_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Minute
        {
            get { return minute_; }
            set
            {
                minute_ = value;
            }
        }

        /// <summary>Field number for the "destinatieStr" field.</summary>
        public const int DestinatieStrFieldNumber = 10;
        private string destinatieStr_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string DestinatieStr
        {
            get { return destinatieStr_; }
            set
            {
                destinatieStr_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "destObj" field.</summary>
        public const int DestObjFieldNumber = 11;
        private global::Protocol.Destinatie destObj_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Protocol.Destinatie DestObj
        {
            get { return destObj_; }
            set
            {
                destObj_ = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as Request);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Request other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (Mess != other.Mess) return false;
            if (!object.Equals(User, other.User)) return false;
            if (Id != other.Id) return false;
            if (!object.Equals(Rezervare, other.Rezervare)) return false;
            if (An != other.An) return false;
            if (Luna != other.Luna) return false;
            if (Zi != other.Zi) return false;
            if (Ora != other.Ora) return false;
            if (Minute != other.Minute) return false;
            if (DestinatieStr != other.DestinatieStr) return false;
            if (!object.Equals(DestObj, other.DestObj)) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (Mess.Length != 0) hash ^= Mess.GetHashCode();
            if (user_ != null) hash ^= User.GetHashCode();
            if (Id != 0) hash ^= Id.GetHashCode();
            if (rezervare_ != null) hash ^= Rezervare.GetHashCode();
            if (An != 0) hash ^= An.GetHashCode();
            if (Luna != 0) hash ^= Luna.GetHashCode();
            if (Zi != 0) hash ^= Zi.GetHashCode();
            if (Ora != 0) hash ^= Ora.GetHashCode();
            if (Minute != 0) hash ^= Minute.GetHashCode();
            if (DestinatieStr.Length != 0) hash ^= DestinatieStr.GetHashCode();
            if (destObj_ != null) hash ^= DestObj.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
            if (Mess.Length != 0)
            {
                output.WriteRawTag(10);
                output.WriteString(Mess);
            }
            if (user_ != null)
            {
                output.WriteRawTag(18);
                output.WriteMessage(User);
            }
            if (Id != 0)
            {
                output.WriteRawTag(24);
                output.WriteInt32(Id);
            }
            if (rezervare_ != null)
            {
                output.WriteRawTag(34);
                output.WriteMessage(Rezervare);
            }
            if (An != 0)
            {
                output.WriteRawTag(40);
                output.WriteInt32(An);
            }
            if (Luna != 0)
            {
                output.WriteRawTag(48);
                output.WriteInt32(Luna);
            }
            if (Zi != 0)
            {
                output.WriteRawTag(56);
                output.WriteInt32(Zi);
            }
            if (Ora != 0)
            {
                output.WriteRawTag(64);
                output.WriteInt32(Ora);
            }
            if (Minute != 0)
            {
                output.WriteRawTag(72);
                output.WriteInt32(Minute);
            }
            if (DestinatieStr.Length != 0)
            {
                output.WriteRawTag(82);
                output.WriteString(DestinatieStr);
            }
            if (destObj_ != null)
            {
                output.WriteRawTag(90);
                output.WriteMessage(DestObj);
            }
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(output);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (Mess.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Mess);
            }
            if (user_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(User);
            }
            if (Id != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
            }
            if (rezervare_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Rezervare);
            }
            if (An != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(An);
            }
            if (Luna != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(Luna);
            }
            if (Zi != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(Zi);
            }
            if (Ora != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(Ora);
            }
            if (Minute != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(Minute);
            }
            if (DestinatieStr.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(DestinatieStr);
            }
            if (destObj_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(DestObj);
            }
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Request other)
        {
            if (other == null)
            {
                return;
            }
            if (other.Mess.Length != 0)
            {
                Mess = other.Mess;
            }
            if (other.user_ != null)
            {
                if (user_ == null)
                {
                    user_ = new global::Protocol.User();
                }
                User.MergeFrom(other.User);
            }
            if (other.Id != 0)
            {
                Id = other.Id;
            }
            if (other.rezervare_ != null)
            {
                if (rezervare_ == null)
                {
                    rezervare_ = new global::Protocol.Rezervare();
                }
                Rezervare.MergeFrom(other.Rezervare);
            }
            if (other.An != 0)
            {
                An = other.An;
            }
            if (other.Luna != 0)
            {
                Luna = other.Luna;
            }
            if (other.Zi != 0)
            {
                Zi = other.Zi;
            }
            if (other.Ora != 0)
            {
                Ora = other.Ora;
            }
            if (other.Minute != 0)
            {
                Minute = other.Minute;
            }
            if (other.DestinatieStr.Length != 0)
            {
                DestinatieStr = other.DestinatieStr;
            }
            if (other.destObj_ != null)
            {
                if (destObj_ == null)
                {
                    destObj_ = new global::Protocol.Destinatie();
                }
                DestObj.MergeFrom(other.DestObj);
            }
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                    case 10:
                        {
                            Mess = input.ReadString();
                            break;
                        }
                    case 18:
                        {
                            if (user_ == null)
                            {
                                user_ = new global::Protocol.User();
                            }
                            input.ReadMessage(user_);
                            break;
                        }
                    case 24:
                        {
                            Id = input.ReadInt32();
                            break;
                        }
                    case 34:
                        {
                            if (rezervare_ == null)
                            {
                                rezervare_ = new global::Protocol.Rezervare();
                            }
                            input.ReadMessage(rezervare_);
                            break;
                        }
                    case 40:
                        {
                            An = input.ReadInt32();
                            break;
                        }
                    case 48:
                        {
                            Luna = input.ReadInt32();
                            break;
                        }
                    case 56:
                        {
                            Zi = input.ReadInt32();
                            break;
                        }
                    case 64:
                        {
                            Ora = input.ReadInt32();
                            break;
                        }
                    case 72:
                        {
                            Minute = input.ReadInt32();
                            break;
                        }
                    case 82:
                        {
                            DestinatieStr = input.ReadString();
                            break;
                        }
                    case 90:
                        {
                            if (destObj_ == null)
                            {
                                destObj_ = new global::Protocol.Destinatie();
                            }
                            input.ReadMessage(destObj_);
                            break;
                        }
                }
            }
        }

    }

    public sealed partial class Response : pb::IMessage<Response>
    {
        private static readonly pb::MessageParser<Response> _parser = new pb::MessageParser<Response>(() => new Response());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Response> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Protocol.MyReflection.Descriptor.MessageTypes[4]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response()
        {
            OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response(Response other) : this()
        {
            mess_ = other.mess_;
            rBool_ = other.rBool_;
            rezervare_ = other.rezervare_ != null ? other.rezervare_.Clone() : null;
            listaRezervari_ = other.listaRezervari_.Clone();
            id_ = other.id_;
            listaDestinatii_ = other.listaDestinatii_.Clone();
            _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Response Clone()
        {
            return new Response(this);
        }

        /// <summary>Field number for the "mess" field.</summary>
        public const int MessFieldNumber = 1;
        private string mess_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Mess
        {
            get { return mess_; }
            set
            {
                mess_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            }
        }

        /// <summary>Field number for the "rBool" field.</summary>
        public const int RBoolFieldNumber = 2;
        private bool rBool_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool RBool
        {
            get { return rBool_; }
            set
            {
                rBool_ = value;
            }
        }

        /// <summary>Field number for the "rezervare" field.</summary>
        public const int RezervareFieldNumber = 3;
        private global::Protocol.Rezervare rezervare_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Protocol.Rezervare Rezervare
        {
            get { return rezervare_; }
            set
            {
                rezervare_ = value;
            }
        }

        /// <summary>Field number for the "listaRezervari" field.</summary>
        public const int ListaRezervariFieldNumber = 4;
        private static readonly pb::FieldCodec<global::Protocol.Rezervare> _repeated_listaRezervari_codec
            = pb::FieldCodec.ForMessage(34, global::Protocol.Rezervare.Parser);
        private readonly pbc::RepeatedField<global::Protocol.Rezervare> listaRezervari_ = new pbc::RepeatedField<global::Protocol.Rezervare>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Protocol.Rezervare> ListaRezervari
        {
            get { return listaRezervari_; }
        }

        /// <summary>Field number for the "id" field.</summary>
        public const int IdFieldNumber = 5;
        private int id_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Id
        {
            get { return id_; }
            set
            {
                id_ = value;
            }
        }

        /// <summary>Field number for the "listaDestinatii" field.</summary>
        public const int ListaDestinatiiFieldNumber = 6;
        private static readonly pb::FieldCodec<global::Protocol.Destinatie> _repeated_listaDestinatii_codec
            = pb::FieldCodec.ForMessage(50, global::Protocol.Destinatie.Parser);
        private readonly pbc::RepeatedField<global::Protocol.Destinatie> listaDestinatii_ = new pbc::RepeatedField<global::Protocol.Destinatie>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Protocol.Destinatie> ListaDestinatii
        {
            get { return listaDestinatii_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as Response);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Response other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (Mess != other.Mess) return false;
            if (RBool != other.RBool) return false;
            if (!object.Equals(Rezervare, other.Rezervare)) return false;
            if (!listaRezervari_.Equals(other.listaRezervari_)) return false;
            if (Id != other.Id) return false;
            if (!listaDestinatii_.Equals(other.listaDestinatii_)) return false;
            return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            int hash = 1;
            if (Mess.Length != 0) hash ^= Mess.GetHashCode();
            if (RBool != false) hash ^= RBool.GetHashCode();
            if (rezervare_ != null) hash ^= Rezervare.GetHashCode();
            hash ^= listaRezervari_.GetHashCode();
            if (Id != 0) hash ^= Id.GetHashCode();
            hash ^= listaDestinatii_.GetHashCode();
            if (_unknownFields != null)
            {
                hash ^= _unknownFields.GetHashCode();
            }
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
            if (Mess.Length != 0)
            {
                output.WriteRawTag(10);
                output.WriteString(Mess);
            }
            if (RBool != false)
            {
                output.WriteRawTag(16);
                output.WriteBool(RBool);
            }
            if (rezervare_ != null)
            {
                output.WriteRawTag(26);
                output.WriteMessage(Rezervare);
            }
            listaRezervari_.WriteTo(output, _repeated_listaRezervari_codec);
            if (Id != 0)
            {
                output.WriteRawTag(40);
                output.WriteInt32(Id);
            }
            listaDestinatii_.WriteTo(output, _repeated_listaDestinatii_codec);
            if (_unknownFields != null)
            {
                _unknownFields.WriteTo(output);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            int size = 0;
            if (Mess.Length != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Mess);
            }
            if (RBool != false)
            {
                size += 1 + 1;
            }
            if (rezervare_ != null)
            {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Rezervare);
            }
            size += listaRezervari_.CalculateSize(_repeated_listaRezervari_codec);
            if (Id != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
            }
            size += listaDestinatii_.CalculateSize(_repeated_listaDestinatii_codec);
            if (_unknownFields != null)
            {
                size += _unknownFields.CalculateSize();
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Response other)
        {
            if (other == null)
            {
                return;
            }
            if (other.Mess.Length != 0)
            {
                Mess = other.Mess;
            }
            if (other.RBool != false)
            {
                RBool = other.RBool;
            }
            if (other.rezervare_ != null)
            {
                if (rezervare_ == null)
                {
                    rezervare_ = new global::Protocol.Rezervare();
                }
                Rezervare.MergeFrom(other.Rezervare);
            }
            listaRezervari_.Add(other.listaRezervari_);
            if (other.Id != 0)
            {
                Id = other.Id;
            }
            listaDestinatii_.Add(other.listaDestinatii_);
            _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                    case 10:
                        {
                            Mess = input.ReadString();
                            break;
                        }
                    case 16:
                        {
                            RBool = input.ReadBool();
                            break;
                        }
                    case 26:
                        {
                            if (rezervare_ == null)
                            {
                                rezervare_ = new global::Protocol.Rezervare();
                            }
                            input.ReadMessage(rezervare_);
                            break;
                        }
                    case 34:
                        {
                            listaRezervari_.AddEntriesFrom(input, _repeated_listaRezervari_codec);
                            break;
                        }
                    case 40:
                        {
                            Id = input.ReadInt32();
                            break;
                        }
                    case 50:
                        {
                            listaDestinatii_.AddEntriesFrom(input, _repeated_listaDestinatii_codec);
                            break;
                        }
                }
            }
        }

    }

    #endregion

}

#endregion Designer generated code
